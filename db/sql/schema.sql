-- Drop dependent tables first
DROP INDEX IF EXISTS chat_session_items_session_id_user_id_idx;
DROP INDEX IF EXISTS chat_sessions_user_id_idx;
DROP INDEX IF EXISTS rate_limits_user_id_idx;
DROP INDEX IF EXISTS api_tokens_user_id_idx;
DROP INDEX IF EXISTS secrets_user_id_idx;

DROP TABLE IF EXISTS rate_limits;
DROP TABLE IF EXISTS api_tokens;
DROP TABLE IF EXISTS integrations;
DROP TABLE IF EXISTS secrets;
DROP TABLE IF EXISTS chat_session_items;
DROP TABLE IF EXISTS chat_sessions;
DROP TABLE IF EXISTS decks;

DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS cards;
DROP TABLE IF EXISTS game_state_versions;
DROP TABLE IF EXISTS game_states;

CREATE TABLE users (
    ID BIGINT PRIMARY KEY,
    CREATED_AT TIMESTAMPTZ NOT NULL,
    UPDATED_AT TIMESTAMPTZ,
    DATA JSONB NOT NULL
);

CREATE TABLE game_states (
    ID BIGINT PRIMARY KEY,
    CREATED_AT TIMESTAMPTZ NOT NULL,
    UPDATED_AT TIMESTAMPTZ,
    DATA JSONB NOT NULL
);

CREATE TABLE game_state_versions (
    ID BIGINT PRIMARY KEY,
    GAME_STATE_ID BIGINT NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL,
    UPDATED_AT TIMESTAMPTZ,
    DATA JSONB NOT NULL,
    FOREIGN KEY (GAME_STATE_ID) REFERENCES game_states(ID) ON DELETE CASCADE
);

CREATE TABLE cards (
    ID BIGINT PRIMARY KEY,
    CREATED_AT TIMESTAMPTZ NOT NULL,
    UPDATED_AT TIMESTAMPTZ,
    TYPE VARCHAR(255) NOT NULL,
    DATA JSONB NOT NULL
);

CREATE TABLE decks (
    ID BIGINT PRIMARY KEY,
    USER_ID BIGINT NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL,
    UPDATED_AT TIMESTAMPTZ,
    DATA JSONB NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES users(ID) ON DELETE CASCADE
);

CREATE INDEX decks_user_id_idx ON decks (USER_ID);

CREATE TABLE secrets (
    ID BIGINT,
    USER_ID BIGINT NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL,
    UPDATED_AT TIMESTAMPTZ,
    DATA JSONB NOT NULL,
    PRIMARY KEY (ID, USER_ID),
    FOREIGN KEY (USER_ID) REFERENCES users(ID) ON DELETE CASCADE
);

CREATE INDEX secrets_user_id_idx ON secrets (USER_ID);

CREATE TABLE api_tokens (
    ID BIGINT PRIMARY KEY,
    USER_ID BIGINT NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL,
    UPDATED_AT TIMESTAMPTZ,
    DATA JSONB NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES users(ID) ON DELETE CASCADE
);

CREATE INDEX api_tokens_user_id_idx ON api_tokens (USER_ID);

CREATE TABLE rate_limits (
    ID BIGINT PRIMARY KEY,
    USER_ID BIGINT NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL,
    UPDATED_AT TIMESTAMPTZ,
    DATA JSONB NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES users(ID) ON DELETE CASCADE
);

CREATE INDEX rate_limits_user_id_idx ON rate_limits (USER_ID);

CREATE TABLE chat_sessions (
    ID BIGINT PRIMARY KEY,
    USER_ID BIGINT NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL,
    UPDATED_AT TIMESTAMPTZ,
    DATA JSONB NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES users(ID) ON DELETE CASCADE
);

CREATE INDEX chat_sessions_user_id_idx ON chat_sessions (USER_ID);

CREATE TABLE chat_session_items (
    ID BIGINT PRIMARY KEY,
    USER_ID BIGINT NOT NULL,
    SESSION_ID BIGINT NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL,
    UPDATED_AT TIMESTAMPTZ,
    TYPE VARCHAR(255) NOT NULL,
    DATA JSONB NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES users(ID) ON DELETE CASCADE,
    FOREIGN KEY (SESSION_ID) REFERENCES chat_sessions(ID) ON DELETE CASCADE
);

CREATE INDEX chat_session_items_session_id_user_id_idx ON chat_session_items (SESSION_ID, USER_ID);

CREATE TABLE integrations (
    ID BIGINT PRIMARY KEY,
    TYPE VARCHAR(255) NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL,
    UPDATED_AT TIMESTAMPTZ,
    DATA JSONB NOT NULL
);

CREATE INDEX integrations_type_idx ON integrations (TYPE);
